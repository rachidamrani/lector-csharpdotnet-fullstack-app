@page "/book/new"

@using LectorNet.Domain.Models.Books
@using LectorNet.UI.ViewModels
@using Microsoft.AspNetCore.Authorization

@attribute [Authorize]

<section class="h-full mx-auto flex flex-col items-center justify-center w-full">
    <h2> Ajouter un livre </h2>
    <EditForm Model="AddBookModel" FormName="addBookForm" OnValidSubmit="HandleAddBook" class="w-full">
        <DataAnnotationsValidator />
        <div class="addBookForm">
            <div class="form-group">
                <label>Titre : </label>
                <InputText @bind-Value="AddBookModel.Title" placeholder="Titre" class="base-input" />
                <ValidationMessage For="() => AddBookModel.Title" class="error-input-message" />
            </div>
            <div class="form-group">
                <label>Auteur : </label>
                <InputText @bind-Value="AddBookModel.Author" placeholder="Auteur" class="base-input" />
                <ValidationMessage For="() => AddBookModel.Author" class="error-input-message" />
            </div>
            <div class="form-group">
                <label>Isbn : </label>
                <InputText @bind-Value="AddBookModel.Isbn" placeholder="Isbn" class="base-input" />
                <ValidationMessage For="() => AddBookModel.Isbn" class="error-input-message" />
            </div>
            <div class="form-group">
                <label>Genre : </label>
                <InputSelect @bind-Value="AddBookModel.Genre" placeholder="Genre" class="base-input">
                    <option value="">Genre</option>
                    @foreach (BookGenre genre in BookGenre.List)
                    {
                        <option value="@(genre.Name)">@genre.Name</option>
                    }
                </InputSelect>
                <ValidationMessage For="() => AddBookModel.Genre" class="error-input-message" />
            </div>
            <div class="form-group">
                <label>Année de publication : </label>
                <InputText @bind-Value="AddBookModel.PublicationYear" placeholder="Année de publication"
                           class="base-input" />
                <ValidationMessage For="() => AddBookModel.PublicationYear" class="error-input-message" />
            </div>
            <div class="form-group">
                <label>Maison d'édition : </label>
                <InputText @bind-Value="AddBookModel.PublishingHouse" placeholder="Maison d'édition"
                           class="base-input" />
                <ValidationMessage For="() => AddBookModel.PublishingHouse" class="error-input-message" />
            </div>
            <div class="form-group">
                <label>Nombre de pages : </label>
                <InputNumber step="1" min="0" @bind-Value="AddBookModel.NumberOfPages" placeholder="Nombre de pages"
                             class="base-input" />
                <ValidationMessage For="() => AddBookModel.NumberOfPages" class="error-input-message" />
            </div>
            <div class="form-group">
                <label>Couverture du livre : </label>
                <InputFile @bind-Value="AddBookModel.BookCover" class="base-input"/>
                <ValidationMessage For="() => AddBookModel.BookCover" class="error-input-message" />
            </div>
            <div class="form-group">
                <InputCheckbox @bind-Value="AddBookModel.AlreadyRead" placeholder="Livre lu" />
                <label>Avez-vous déja lu ce livre ? </label>
            </div>
        </div>
        <div class="form-group">
            <button type="submit" class="base-button primary-color"> Ajouter </button>
        </div>
    </EditForm>
</section>

@code {
    
    [SupplyParameterFromForm(FormName="addBookFrom")]
    private AddBookModel AddBookModel { get; set; } = new();

    private async Task HandleAddBook()
    {
        await Task.CompletedTask;
    }
}