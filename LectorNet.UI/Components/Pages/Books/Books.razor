@page "/mybooks"

@using LectorNet.Contracts.Books
@using Microsoft.AspNetCore.Authorization

@inject ILogger<Books> Logger;

@rendermode InteractiveServer

@attribute [Authorize]

<h2>Vos Livres </h2>

<section>
    @if (_books?.Count > 0)
    {
        <table>
            <tr>
                <th>Titre</th>
                <th>Auteur</th>
                <th>Isbn</th>
                <th>Genre</th>
                <th>Année de publication</th>
                <th>Maison d'édition</th>
                <th>Nombre de pages</th>
                <th>Livre déja lu ?</th>
                <th></th>
            </tr>
            @foreach (var book in _books)
            {
                <tr>
                    <td>@book.Title</td>
                    <td>@book.Author</td>
                    <td>@book.Isbn</td>
                    <td>@book.Genre</td>
                    <td>@book.PublicationYear</td>
                    <td>@book.PublishingHouse</td>
                    <td>@book.NumberOfPages</td>
                    <td>@(book.AlreadyRead ? "Oui" : "Non")</td>
                    <td>
                        <div class="user-action">
                            <img src="images/edit.svg" alt="modifier" @onclick="UpdateBook"/>
                            <img src="images/delete.svg" alt="supprimer" @onclick="@(() => DeleteBook(book.Id))"/>
                        </div>
                    </td>
                </tr>
            }
        </table>
    }
    else
    {
    <p> Vous n’avez encore ajouté aucun livre.</p>
    }
</section>



@code {

    List<BookResponse>? _books;
    
    protected override async Task OnInitializedAsync()
    {
    }

    private async Task DeleteBook(Guid id)
    {
        // TODO
    }

    private void UpdateBook()
    {
        // TODO
    }

}