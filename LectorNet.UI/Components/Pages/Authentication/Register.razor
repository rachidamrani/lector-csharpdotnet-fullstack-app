@page "/auth/register"
@using LectorNet.UI.Common
@using LectorNet.UI.Services
@using LectorNet.UI.ViewModels
@rendermode InteractiveServer

@inject AuthService AuthService
@inject NavigationManager NavigationManager


<section class="h-full mx-auto flex flex-col items-center justify-center w-80">
    <h3 class="text-3xl font-bold mb-6"> S'inscrire </h3>
    <EditForm Model="@_registerUserModel" OnValidSubmit="HandleValideSubmit" class="w-full">
        <DataAnnotationsValidator />
        <div class="form-group">
            <InputText @bind-Value="_registerUserModel.FirstName" placeholder="Prénom" class="base-input" />
            <ValidationMessage For="@(() => _registerUserModel.FirstName)" class="error-input-message" />
        </div>
        <div class="form-group">
            <InputText @bind-Value="_registerUserModel.LastName" placeholder="Nom" class="base-input" />
            <ValidationMessage For="@(() => _registerUserModel.LastName)" class="error-input-message" />
        </div>
        <div class="form-group">
            <InputText @bind-Value="_registerUserModel.Email" placeholder="Email" class="base-input" />
            <ValidationMessage For="@(() => _registerUserModel.Email)" class="error-input-message" />
        </div>
        <div class="form-group">
            <InputText @bind-Value="_registerUserModel.Password" placeholder="Mot de passe" type="password"
                class="base-input" />
            <ValidationMessage For="@(() => _registerUserModel.Password)" class="error-input-message" />
        </div>
        <div class="form-group">
            <InputText @bind-Value="_registerUserModel.ConfirmPassword" placeholder="Confirmer votre mot de passe"
                type="password" class="base-input" />
            <ValidationMessage For="@(() => _registerUserModel.ConfirmPassword)" class="error-input-message" />
        </div>
        <div class="self-start mb-5">
            <button class="base-button primary-color" type="submit">S'inscrire</button>
        </div>
        <div class="form-group self-start">
            <span class="text-xs block">Avez-vous déjà un compte ?
                <a href="/auth/login" class="text-green-700">Se connecter</a>
            </span>
        </div>
    </EditForm>
</section>

@code {
    private readonly RegisterUserModel _registerUserModel = new();

    private ErrorResponse? _errorResponse;

    private async Task HandleValideSubmit()
    {
        HttpResponseMessage response = await AuthService.Register(_registerUserModel);

        if (response.IsSuccessStatusCode)
        {
            NavigationManager.NavigateTo("/welcome");
        }
        else
        {
            _errorResponse = await response.Content.ReadFromJsonAsync<ErrorResponse>();
        }
    }
}